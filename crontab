# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
17 *	* * *	root    cd / && run-parts --report /etc/cron.hourly
25 6	* * *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6	* * 7	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6	1 * *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
#
# * *	* * *	pi	sh /home/pi/scripts/lec3/log.sh
# Run at boot
# @reboot		pi	sh /home/pi/scripts/lec3/cron_script.sh i_run_at_boot
# Run at 1510
# 10 15	* * *	pi	sh /home/pi/scripts/lec3/cron_script.sh i_run_at_1510
# Run every 3 minutes
# */3 *	* * *	pi	sh /home/pi/scripts/lec3/cron_script.sh i_run_every_3_minutes
# Run each minute
# * *	* * *	pi	sh /home/pi/scripts/lec3/cron_script.sh i_run_each_minute
# Backup pi user folder
* *	* * *	root	sh /home/zip-pi.sh
# Send sensor data every minute
# * *	* * *	root	sh /home/pi/scripts/lec4/send_light_data.sh
#12 hour water pump
0 */12     * * *   root    sh /home/pi/scripts/exam/pico/12_hour_pump.sh
# Sends CPU temp to MQTT cluster
@reboot         pi      sh /home/pi/scripts/lec7/mqtt-cpu-temp-publish-sh
# Request the remote for button presses and inserts them into the mqtt broker
@reboot		pi	sh /home/pi/scripts/exam/remote/remote-button-press-listener.sh
# Reacts to topic messages and configures the lights on the remote
@reboot		pi	bash /home/pi/scripts/exam/remote/filter-and-send-lights-request.sh
# Starts the pump when button is pressed
@reboot		pi	sh /home/pi/scripts/exam/pico/start_pump_button_pressed.sh
# Listens to the pico over usb and publishes the sensor values to topics 
@reboot         pi      bash /home/pi/scripts/exam/pico/listen_all.sh
# Interprets the alarms values and sends to alarm/isOn topic
@reboot		pi	bash /home/pi/scripts/exam/alarm/check_alarm.sh
# Pumps if moisture gets too low, max 1 per hour
@reboot         pi      sh /home/pi/scripts/exam/pico/moisture_pump.sh
# Check value of moisture, returns true if under threshold
@reboot		pi	sh /home/pi/scripts/exam/pico/moisture_threshold.sh
# Log CPU temp
@reboot		pi	sh /home/pi/scripts/exam/logs/cpu_temp.sh
# Log CPU usage
@reboot         pi      sh /home/pi/scripts/exam/logs/cpu_usage.sh
# Log Mem usage
@reboot         pi      sh /home/pi/scripts/exam/logs/mem_free.sh
# Contains the logic of when the lights should be on and sends that info to the lights using the remote/lights topic
@reboot         pi      bash /home/pi/scripts/exam/remote/light-controller.sh
# Log Internet Connection and Log Internet Speed, if there are connection
0 * * * *	pi	sh /home/pi/scripts/exam/logs/internet_connection.sh
